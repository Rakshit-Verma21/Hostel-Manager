// Generated by view binder compiler. Do not edit!
package com.example.my_hostel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.my_hostel.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SingleRoomBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView roomCvImageView;

  @NonNull
  public final TextView roomCvRoomName;

  @NonNull
  public final TextView roomCvSize;

  @NonNull
  public final TextView roomCvStatus;

  @NonNull
  public final TextView roomCvType;

  private SingleRoomBinding(@NonNull CardView rootView, @NonNull ImageView roomCvImageView,
      @NonNull TextView roomCvRoomName, @NonNull TextView roomCvSize,
      @NonNull TextView roomCvStatus, @NonNull TextView roomCvType) {
    this.rootView = rootView;
    this.roomCvImageView = roomCvImageView;
    this.roomCvRoomName = roomCvRoomName;
    this.roomCvSize = roomCvSize;
    this.roomCvStatus = roomCvStatus;
    this.roomCvType = roomCvType;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static SingleRoomBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SingleRoomBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.single_room, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SingleRoomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.room_cv_image_view;
      ImageView roomCvImageView = ViewBindings.findChildViewById(rootView, id);
      if (roomCvImageView == null) {
        break missingId;
      }

      id = R.id.room_cv_room_name;
      TextView roomCvRoomName = ViewBindings.findChildViewById(rootView, id);
      if (roomCvRoomName == null) {
        break missingId;
      }

      id = R.id.room_cv_size;
      TextView roomCvSize = ViewBindings.findChildViewById(rootView, id);
      if (roomCvSize == null) {
        break missingId;
      }

      id = R.id.room_cv_status;
      TextView roomCvStatus = ViewBindings.findChildViewById(rootView, id);
      if (roomCvStatus == null) {
        break missingId;
      }

      id = R.id.room_cv_type;
      TextView roomCvType = ViewBindings.findChildViewById(rootView, id);
      if (roomCvType == null) {
        break missingId;
      }

      return new SingleRoomBinding((CardView) rootView, roomCvImageView, roomCvRoomName, roomCvSize,
          roomCvStatus, roomCvType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
