// Generated by view binder compiler. Do not edit!
package com.example.my_hostel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.my_hostel.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddHostlersBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addButtonHostlerMain;

  @NonNull
  public final FrameLayout assignRoomLayout;

  @NonNull
  public final Button button4;

  @NonNull
  public final ImageButton buttonEditHostlerInformation;

  @NonNull
  public final Button confirmRoom;

  @NonNull
  public final View divider12;

  @NonNull
  public final View divider8;

  @NonNull
  public final EditText hostlerAddress;

  @NonNull
  public final EditText hostlerCollege;

  @NonNull
  public final EditText hostlerCurrentDegree;

  @NonNull
  public final EditText hostlerEducationDetails;

  @NonNull
  public final EditText hostlerFatherName;

  @NonNull
  public final EditText hostlerFatherPhoneNumber;

  @NonNull
  public final EditText hostlerMotherName;

  @NonNull
  public final EditText hostlerMotherPhoneNumber;

  @NonNull
  public final EditText hostlerName;

  @NonNull
  public final EditText hostlerPhoneNumber;

  @NonNull
  public final CircleImageView hostlerPic;

  @NonNull
  public final ImageButton hostlerSaveChanges;

  @NonNull
  public final LinearLayout linearLayout1;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout ly;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView nameDisplayRoomAssingmentPage;

  @NonNull
  public final TextView otherRoommates;

  @NonNull
  public final ImageView photoAadhaar;

  @NonNull
  public final ImageView photoPan;

  @NonNull
  public final ProgressBar progressUploadDocumentsHostler;

  @NonNull
  public final RelativeLayout relativeLayout1ViewHostlerActivity;

  @NonNull
  public final TextView roomOccupiedNo;

  @NonNull
  public final TextView roomSize;

  @NonNull
  public final TextView roomStatus;

  @NonNull
  public final TextView roomType;

  @NonNull
  public final RecyclerView rvOtherRoommatesList;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final Spinner spinner;

  @NonNull
  public final TextView textInfoSave;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView33;

  @NonNull
  public final TextView textView36;

  @NonNull
  public final TextView textView37;

  @NonNull
  public final TextView textView38;

  @NonNull
  public final TextView textView40;

  @NonNull
  public final TextView textView41;

  @NonNull
  public final TextView textView42;

  @NonNull
  public final TextView textView43;

  @NonNull
  public final TextView textView44;

  @NonNull
  public final TextView textView45;

  @NonNull
  public final TextView textView46;

  @NonNull
  public final TextView textView47;

  @NonNull
  public final TextView textView48;

  @NonNull
  public final TextView textView49;

  @NonNull
  public final TextView textView52;

  @NonNull
  public final TextView textView53;

  @NonNull
  public final TextView textView54;

  @NonNull
  public final TextView textView55;

  @NonNull
  public final TextView textView57;

  @NonNull
  public final TextView textView58;

  @NonNull
  public final TextView textView59;

  @NonNull
  public final TextView textView60;

  @NonNull
  public final TextView textView61;

  @NonNull
  public final TextView textViewDetails;

  private ActivityAddHostlersBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addButtonHostlerMain, @NonNull FrameLayout assignRoomLayout,
      @NonNull Button button4, @NonNull ImageButton buttonEditHostlerInformation,
      @NonNull Button confirmRoom, @NonNull View divider12, @NonNull View divider8,
      @NonNull EditText hostlerAddress, @NonNull EditText hostlerCollege,
      @NonNull EditText hostlerCurrentDegree, @NonNull EditText hostlerEducationDetails,
      @NonNull EditText hostlerFatherName, @NonNull EditText hostlerFatherPhoneNumber,
      @NonNull EditText hostlerMotherName, @NonNull EditText hostlerMotherPhoneNumber,
      @NonNull EditText hostlerName, @NonNull EditText hostlerPhoneNumber,
      @NonNull CircleImageView hostlerPic, @NonNull ImageButton hostlerSaveChanges,
      @NonNull LinearLayout linearLayout1, @NonNull LinearLayout linearLayout2,
      @NonNull LinearLayout ly, @NonNull ConstraintLayout main,
      @NonNull TextView nameDisplayRoomAssingmentPage, @NonNull TextView otherRoommates,
      @NonNull ImageView photoAadhaar, @NonNull ImageView photoPan,
      @NonNull ProgressBar progressUploadDocumentsHostler,
      @NonNull RelativeLayout relativeLayout1ViewHostlerActivity, @NonNull TextView roomOccupiedNo,
      @NonNull TextView roomSize, @NonNull TextView roomStatus, @NonNull TextView roomType,
      @NonNull RecyclerView rvOtherRoommatesList, @NonNull ScrollView scrollView,
      @NonNull Spinner spinner, @NonNull TextView textInfoSave, @NonNull TextView textView2,
      @NonNull TextView textView33, @NonNull TextView textView36, @NonNull TextView textView37,
      @NonNull TextView textView38, @NonNull TextView textView40, @NonNull TextView textView41,
      @NonNull TextView textView42, @NonNull TextView textView43, @NonNull TextView textView44,
      @NonNull TextView textView45, @NonNull TextView textView46, @NonNull TextView textView47,
      @NonNull TextView textView48, @NonNull TextView textView49, @NonNull TextView textView52,
      @NonNull TextView textView53, @NonNull TextView textView54, @NonNull TextView textView55,
      @NonNull TextView textView57, @NonNull TextView textView58, @NonNull TextView textView59,
      @NonNull TextView textView60, @NonNull TextView textView61,
      @NonNull TextView textViewDetails) {
    this.rootView = rootView;
    this.addButtonHostlerMain = addButtonHostlerMain;
    this.assignRoomLayout = assignRoomLayout;
    this.button4 = button4;
    this.buttonEditHostlerInformation = buttonEditHostlerInformation;
    this.confirmRoom = confirmRoom;
    this.divider12 = divider12;
    this.divider8 = divider8;
    this.hostlerAddress = hostlerAddress;
    this.hostlerCollege = hostlerCollege;
    this.hostlerCurrentDegree = hostlerCurrentDegree;
    this.hostlerEducationDetails = hostlerEducationDetails;
    this.hostlerFatherName = hostlerFatherName;
    this.hostlerFatherPhoneNumber = hostlerFatherPhoneNumber;
    this.hostlerMotherName = hostlerMotherName;
    this.hostlerMotherPhoneNumber = hostlerMotherPhoneNumber;
    this.hostlerName = hostlerName;
    this.hostlerPhoneNumber = hostlerPhoneNumber;
    this.hostlerPic = hostlerPic;
    this.hostlerSaveChanges = hostlerSaveChanges;
    this.linearLayout1 = linearLayout1;
    this.linearLayout2 = linearLayout2;
    this.ly = ly;
    this.main = main;
    this.nameDisplayRoomAssingmentPage = nameDisplayRoomAssingmentPage;
    this.otherRoommates = otherRoommates;
    this.photoAadhaar = photoAadhaar;
    this.photoPan = photoPan;
    this.progressUploadDocumentsHostler = progressUploadDocumentsHostler;
    this.relativeLayout1ViewHostlerActivity = relativeLayout1ViewHostlerActivity;
    this.roomOccupiedNo = roomOccupiedNo;
    this.roomSize = roomSize;
    this.roomStatus = roomStatus;
    this.roomType = roomType;
    this.rvOtherRoommatesList = rvOtherRoommatesList;
    this.scrollView = scrollView;
    this.spinner = spinner;
    this.textInfoSave = textInfoSave;
    this.textView2 = textView2;
    this.textView33 = textView33;
    this.textView36 = textView36;
    this.textView37 = textView37;
    this.textView38 = textView38;
    this.textView40 = textView40;
    this.textView41 = textView41;
    this.textView42 = textView42;
    this.textView43 = textView43;
    this.textView44 = textView44;
    this.textView45 = textView45;
    this.textView46 = textView46;
    this.textView47 = textView47;
    this.textView48 = textView48;
    this.textView49 = textView49;
    this.textView52 = textView52;
    this.textView53 = textView53;
    this.textView54 = textView54;
    this.textView55 = textView55;
    this.textView57 = textView57;
    this.textView58 = textView58;
    this.textView59 = textView59;
    this.textView60 = textView60;
    this.textView61 = textView61;
    this.textViewDetails = textViewDetails;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddHostlersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddHostlersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_hostlers, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddHostlersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_button_hostler_main;
      Button addButtonHostlerMain = ViewBindings.findChildViewById(rootView, id);
      if (addButtonHostlerMain == null) {
        break missingId;
      }

      id = R.id.assign_room_layout;
      FrameLayout assignRoomLayout = ViewBindings.findChildViewById(rootView, id);
      if (assignRoomLayout == null) {
        break missingId;
      }

      id = R.id.button4;
      Button button4 = ViewBindings.findChildViewById(rootView, id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.button_edit_hostler_information;
      ImageButton buttonEditHostlerInformation = ViewBindings.findChildViewById(rootView, id);
      if (buttonEditHostlerInformation == null) {
        break missingId;
      }

      id = R.id.confirm_room;
      Button confirmRoom = ViewBindings.findChildViewById(rootView, id);
      if (confirmRoom == null) {
        break missingId;
      }

      id = R.id.divider12;
      View divider12 = ViewBindings.findChildViewById(rootView, id);
      if (divider12 == null) {
        break missingId;
      }

      id = R.id.divider8;
      View divider8 = ViewBindings.findChildViewById(rootView, id);
      if (divider8 == null) {
        break missingId;
      }

      id = R.id.hostler_address;
      EditText hostlerAddress = ViewBindings.findChildViewById(rootView, id);
      if (hostlerAddress == null) {
        break missingId;
      }

      id = R.id.hostler_college;
      EditText hostlerCollege = ViewBindings.findChildViewById(rootView, id);
      if (hostlerCollege == null) {
        break missingId;
      }

      id = R.id.hostler_current_degree;
      EditText hostlerCurrentDegree = ViewBindings.findChildViewById(rootView, id);
      if (hostlerCurrentDegree == null) {
        break missingId;
      }

      id = R.id.hostler_education_details;
      EditText hostlerEducationDetails = ViewBindings.findChildViewById(rootView, id);
      if (hostlerEducationDetails == null) {
        break missingId;
      }

      id = R.id.hostler_father_name;
      EditText hostlerFatherName = ViewBindings.findChildViewById(rootView, id);
      if (hostlerFatherName == null) {
        break missingId;
      }

      id = R.id.hostler_father_phone_number;
      EditText hostlerFatherPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (hostlerFatherPhoneNumber == null) {
        break missingId;
      }

      id = R.id.hostler_mother_name;
      EditText hostlerMotherName = ViewBindings.findChildViewById(rootView, id);
      if (hostlerMotherName == null) {
        break missingId;
      }

      id = R.id.hostler_mother_phone_number;
      EditText hostlerMotherPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (hostlerMotherPhoneNumber == null) {
        break missingId;
      }

      id = R.id.hostler_name;
      EditText hostlerName = ViewBindings.findChildViewById(rootView, id);
      if (hostlerName == null) {
        break missingId;
      }

      id = R.id.hostler_phone_number;
      EditText hostlerPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (hostlerPhoneNumber == null) {
        break missingId;
      }

      id = R.id.hostler_pic;
      CircleImageView hostlerPic = ViewBindings.findChildViewById(rootView, id);
      if (hostlerPic == null) {
        break missingId;
      }

      id = R.id.hostler_save_changes;
      ImageButton hostlerSaveChanges = ViewBindings.findChildViewById(rootView, id);
      if (hostlerSaveChanges == null) {
        break missingId;
      }

      id = R.id.linear_layout_1;
      LinearLayout linearLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout1 == null) {
        break missingId;
      }

      id = R.id.linear_layout_2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.ly;
      LinearLayout ly = ViewBindings.findChildViewById(rootView, id);
      if (ly == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.name_display_room_assingment_page;
      TextView nameDisplayRoomAssingmentPage = ViewBindings.findChildViewById(rootView, id);
      if (nameDisplayRoomAssingmentPage == null) {
        break missingId;
      }

      id = R.id.other_roommates;
      TextView otherRoommates = ViewBindings.findChildViewById(rootView, id);
      if (otherRoommates == null) {
        break missingId;
      }

      id = R.id.photo_aadhaar;
      ImageView photoAadhaar = ViewBindings.findChildViewById(rootView, id);
      if (photoAadhaar == null) {
        break missingId;
      }

      id = R.id.photo_pan;
      ImageView photoPan = ViewBindings.findChildViewById(rootView, id);
      if (photoPan == null) {
        break missingId;
      }

      id = R.id.progress_upload_documents_hostler;
      ProgressBar progressUploadDocumentsHostler = ViewBindings.findChildViewById(rootView, id);
      if (progressUploadDocumentsHostler == null) {
        break missingId;
      }

      id = R.id.relative_layout_1_View_hostler_activity;
      RelativeLayout relativeLayout1ViewHostlerActivity = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout1ViewHostlerActivity == null) {
        break missingId;
      }

      id = R.id.room_occupied_no;
      TextView roomOccupiedNo = ViewBindings.findChildViewById(rootView, id);
      if (roomOccupiedNo == null) {
        break missingId;
      }

      id = R.id.room_size;
      TextView roomSize = ViewBindings.findChildViewById(rootView, id);
      if (roomSize == null) {
        break missingId;
      }

      id = R.id.room_status;
      TextView roomStatus = ViewBindings.findChildViewById(rootView, id);
      if (roomStatus == null) {
        break missingId;
      }

      id = R.id.room_type;
      TextView roomType = ViewBindings.findChildViewById(rootView, id);
      if (roomType == null) {
        break missingId;
      }

      id = R.id.rv_other_roommates_list;
      RecyclerView rvOtherRoommatesList = ViewBindings.findChildViewById(rootView, id);
      if (rvOtherRoommatesList == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      id = R.id.text_info_save;
      TextView textInfoSave = ViewBindings.findChildViewById(rootView, id);
      if (textInfoSave == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView33;
      TextView textView33 = ViewBindings.findChildViewById(rootView, id);
      if (textView33 == null) {
        break missingId;
      }

      id = R.id.textView36;
      TextView textView36 = ViewBindings.findChildViewById(rootView, id);
      if (textView36 == null) {
        break missingId;
      }

      id = R.id.textView37;
      TextView textView37 = ViewBindings.findChildViewById(rootView, id);
      if (textView37 == null) {
        break missingId;
      }

      id = R.id.textView38;
      TextView textView38 = ViewBindings.findChildViewById(rootView, id);
      if (textView38 == null) {
        break missingId;
      }

      id = R.id.textView40;
      TextView textView40 = ViewBindings.findChildViewById(rootView, id);
      if (textView40 == null) {
        break missingId;
      }

      id = R.id.textView41;
      TextView textView41 = ViewBindings.findChildViewById(rootView, id);
      if (textView41 == null) {
        break missingId;
      }

      id = R.id.textView42;
      TextView textView42 = ViewBindings.findChildViewById(rootView, id);
      if (textView42 == null) {
        break missingId;
      }

      id = R.id.textView43;
      TextView textView43 = ViewBindings.findChildViewById(rootView, id);
      if (textView43 == null) {
        break missingId;
      }

      id = R.id.textView44;
      TextView textView44 = ViewBindings.findChildViewById(rootView, id);
      if (textView44 == null) {
        break missingId;
      }

      id = R.id.textView45;
      TextView textView45 = ViewBindings.findChildViewById(rootView, id);
      if (textView45 == null) {
        break missingId;
      }

      id = R.id.textView46;
      TextView textView46 = ViewBindings.findChildViewById(rootView, id);
      if (textView46 == null) {
        break missingId;
      }

      id = R.id.textView47;
      TextView textView47 = ViewBindings.findChildViewById(rootView, id);
      if (textView47 == null) {
        break missingId;
      }

      id = R.id.textView48;
      TextView textView48 = ViewBindings.findChildViewById(rootView, id);
      if (textView48 == null) {
        break missingId;
      }

      id = R.id.textView49;
      TextView textView49 = ViewBindings.findChildViewById(rootView, id);
      if (textView49 == null) {
        break missingId;
      }

      id = R.id.textView52;
      TextView textView52 = ViewBindings.findChildViewById(rootView, id);
      if (textView52 == null) {
        break missingId;
      }

      id = R.id.textView53;
      TextView textView53 = ViewBindings.findChildViewById(rootView, id);
      if (textView53 == null) {
        break missingId;
      }

      id = R.id.textView54;
      TextView textView54 = ViewBindings.findChildViewById(rootView, id);
      if (textView54 == null) {
        break missingId;
      }

      id = R.id.textView55;
      TextView textView55 = ViewBindings.findChildViewById(rootView, id);
      if (textView55 == null) {
        break missingId;
      }

      id = R.id.textView57;
      TextView textView57 = ViewBindings.findChildViewById(rootView, id);
      if (textView57 == null) {
        break missingId;
      }

      id = R.id.textView58;
      TextView textView58 = ViewBindings.findChildViewById(rootView, id);
      if (textView58 == null) {
        break missingId;
      }

      id = R.id.textView59;
      TextView textView59 = ViewBindings.findChildViewById(rootView, id);
      if (textView59 == null) {
        break missingId;
      }

      id = R.id.textView60;
      TextView textView60 = ViewBindings.findChildViewById(rootView, id);
      if (textView60 == null) {
        break missingId;
      }

      id = R.id.textView61;
      TextView textView61 = ViewBindings.findChildViewById(rootView, id);
      if (textView61 == null) {
        break missingId;
      }

      id = R.id.text_view_Details;
      TextView textViewDetails = ViewBindings.findChildViewById(rootView, id);
      if (textViewDetails == null) {
        break missingId;
      }

      return new ActivityAddHostlersBinding((ConstraintLayout) rootView, addButtonHostlerMain,
          assignRoomLayout, button4, buttonEditHostlerInformation, confirmRoom, divider12, divider8,
          hostlerAddress, hostlerCollege, hostlerCurrentDegree, hostlerEducationDetails,
          hostlerFatherName, hostlerFatherPhoneNumber, hostlerMotherName, hostlerMotherPhoneNumber,
          hostlerName, hostlerPhoneNumber, hostlerPic, hostlerSaveChanges, linearLayout1,
          linearLayout2, ly, main, nameDisplayRoomAssingmentPage, otherRoommates, photoAadhaar,
          photoPan, progressUploadDocumentsHostler, relativeLayout1ViewHostlerActivity,
          roomOccupiedNo, roomSize, roomStatus, roomType, rvOtherRoommatesList, scrollView, spinner,
          textInfoSave, textView2, textView33, textView36, textView37, textView38, textView40,
          textView41, textView42, textView43, textView44, textView45, textView46, textView47,
          textView48, textView49, textView52, textView53, textView54, textView55, textView57,
          textView58, textView59, textView60, textView61, textViewDetails);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
