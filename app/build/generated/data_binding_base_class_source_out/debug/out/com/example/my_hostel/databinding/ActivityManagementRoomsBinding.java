// Generated by view binder compiler. Do not edit!
package com.example.my_hostel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.SearchView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.my_hostel.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityManagementRoomsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final Toolbar managementRoomsToolbar;

  @NonNull
  public final RecyclerView rvRoomsRoomManagement;

  @NonNull
  public final SearchView searchRoomManagement;

  private ActivityManagementRoomsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout main, @NonNull Toolbar managementRoomsToolbar,
      @NonNull RecyclerView rvRoomsRoomManagement, @NonNull SearchView searchRoomManagement) {
    this.rootView = rootView;
    this.main = main;
    this.managementRoomsToolbar = managementRoomsToolbar;
    this.rvRoomsRoomManagement = rvRoomsRoomManagement;
    this.searchRoomManagement = searchRoomManagement;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityManagementRoomsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityManagementRoomsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_management_rooms, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityManagementRoomsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.management_Rooms_toolbar;
      Toolbar managementRoomsToolbar = ViewBindings.findChildViewById(rootView, id);
      if (managementRoomsToolbar == null) {
        break missingId;
      }

      id = R.id.rv_rooms_room_management;
      RecyclerView rvRoomsRoomManagement = ViewBindings.findChildViewById(rootView, id);
      if (rvRoomsRoomManagement == null) {
        break missingId;
      }

      id = R.id.search_room_management;
      SearchView searchRoomManagement = ViewBindings.findChildViewById(rootView, id);
      if (searchRoomManagement == null) {
        break missingId;
      }

      return new ActivityManagementRoomsBinding((ConstraintLayout) rootView, main,
          managementRoomsToolbar, rvRoomsRoomManagement, searchRoomManagement);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
